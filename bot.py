import config
import telebot
import pyowm

from telebot import types

bot = telebot.TeleBot(config.telegram_token)
owm = pyowm.OWM(config.pyowm_token)

located = False
started = False
keys_on = False


observation = ''
place = ''


@bot.message_handler(commands=['start'])
def start(message):
    global started

    if located is False:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç‚úå –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –ø–æ–≥–æ–¥—É \U0001f609")
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –∂–∏–≤—ë—à—å üåç")
        print(message.text)
    else:
        bot.send_message(message.chat.id, "–ü–æ—Ö–æ–∂–µ —á—Ç–æ –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ "
                                          "/setlocation")
        print(message.text)


@bot.message_handler(commands=['setlocation'])
def set_location(message):
    global started
    global located

    if started:
        located = False

        bot.send_message(message.chat.id, "–Ø —Å–±—Ä–æ—Å–∏–ª –ª–æ–∫–∞—Ü–∏—é, –Ω–∞–ø–∏—à–∏ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å "
                                          "–ø–æ–≥–æ–¥—É.")
        print(message.text)

    else:
        bot.send_message(message.chat.id, "–ü–æ—Ö–æ–∂–µ –≤—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª–∏ –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ "
                                          "—Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.")
        print(message.text)


@bot.message_handler(content_types=['text'])
def respond(message):
    global place
    global located
    global observation

    print(message.text)

    if located is False:
        try:
            place = message.text
            observation = owm.weather_at_place(place)
            bot.send_message(message.chat.id, "–£—Ä–∞ üòé –Ø –Ω–∞—à—ë–ª –≥–æ—Ä–æ–¥ - " + place + "!")

            markup = types.InlineKeyboardMarkup()
            item1 = types.InlineKeyboardButton("–î–∞", callback_data="Agreed")
            item2 = types.InlineKeyboardButton("–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥", callback_data="Disagreed")

            markup.add(item1, item2)

            bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞ ?ü§î", reply_markup=markup)
            print(message.text)
            print(type(observation))

        except Exception as inst:
            bot.send_message(message.chat.id, "–ú–Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑...")
            print(inst)
    else:
        global keys_on

        markup = types.ReplyKeyboardMarkup()
        item1 = types.KeyboardButton("–ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å")

        markup.add(item1)

        if not keys_on:
            if message.text == "/keyboard":
                bot.send_message(message.chat.id, '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!', reply_markup=markup)
                keys_on = True
                print(message.text)

        if keys_on:
            if message.text == "–ü–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å":
                w = observation.get_weather()
                bot.send_message(message.chat.id, '–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ' + place + ': ' + str(round(w.get_temperature('celsius')['temp'])) + '¬∞', reply_markup=markup)
                print(message.text)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            global located

            if located is False:
                if call.data == "Agreed":
                    bot.send_message(call.message.chat.id, "–õ–æ–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

                    if not keys_on:
                        bot.send_message(call.message.chat.id, "–ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –Ω–∞–ø–∏—à–∏ /keyboard")

                    global started

                    located = True
                    started = True

                elif call.data == "Disagreed":
                    bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥.")

    except Exception as e:
        bot.send_message(call.message.chat.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ...")
        print(e)


if __name__ == '__main__':
    bot.polling(none_stop=True)
    
